csv_files
csv_data <- proc.csv(method = "monthly",
rbind = TRUE,
safe_output = TRUE)
head(csv_data)
csv_spat <- spat.csv(method = "monthly",
des_file = "plot_description.csv",
safe_output = TRUE)
head(csv_spat)
crop.all(method = "MB_Timeseries", overwrite = TRUE)
calc.indices(vi = "all",
bands = c("blue", "green", "red",
"nir", "nirb",
"re1", "re2", "re3",
"swir1", "swir2"),
overwrite = TRUE)
csv_fin <- fin.csv(method = "monthly",
safe_output = TRUE)
head(csv_fin)
autocorr(
method = "monthly",
pred = 5,
resp = c(8:24),
plot.corrplot = FALSE
)
calc.model(
method = "monthly",
timespan = c(2017),
climresp = c(5),
classifier = c(
"rf",
"pls",
"nnet",
"lm"
),
seed = 707,
p = 0.8,
folds = "LLO",
mnote = "vignette",
predrows = c(8:24),
tc_method = "cv",
metric = "RMSE",
autocorrelation = TRUE,
doParallel = FALSE)
climpred(
method = "monthly",
mnote = "vignette",
AOA = FALSE)
predlist <- list.files(envrmt$path_predictions, pattern = ".tif")
head(predlist)
?terra
all_preds <- list.files(envrmt$path_predictions, recursive = FALSE)
all_preds <- list.files(
envrmt$path_predictions,
pattern = ".tif",
recursive = FALSE)
for (s in 1:length(sensor)){
preds <- all_preds[which(grepl(all_preds, pattern = sensor[s]))]
} # end sensor loop
mnote = vignette()
mnote = vignette
mnote = "vignette"
sensor = "Ta_200"
aoa = FALSE
for (s in 1:length(sensor)){
preds <- all_preds[which(grepl(all_preds, pattern = sensor[s]))]
} # end sensor loop
sensor = "REH"
for (s in 1:length(sensor)){
preds <- all_preds[which(grepl(all_preds, pattern = sensor[s]))]
} # end sensor loop
sensor = "Ta_200"
for (s in 1:length(sensor)){
preds <- all_preds[which(grepl(all_preds, pattern = sensor[s]))]
} # end sensor loop
print(paste0("Creating maps for sensor [", sensor[s], "]."))
gsub("_prediction.tif.*", "", preds[i])
gsub("_prediction.tif.*", "", preds[1])
i = 1
prediction <- terra::rast(file.path(envrmt$path_predictions, preds[i]))
terra::plot(prediction)
terra::plot(prediction, background = "lightgrey")
rev(grDevices::terrain.colors(50)
)
mapcolors = heat.colors(50)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey",
)
mapcolors = rev(heat.colors(50))
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey",
)
terra::sbar(xy = scale_position,
type = "bar",
divs = 4)
scale_position = "bottomleft"
terra::sbar(xy = scale_position,
type = "bar",
divs = 4)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(xy = scale_position,
type = "bar",
divs = 4)
prediction
terra::xmin(prediction)
terra::xmin(prediction) - terra::xmax(prediction)
terra::xmax(prediction) - terra::xmin(prediction)
if ((terra::xmax(prediction) - terra::xmin(prediction)) > 5000){
scale <- 1
scale_labels <- c("", "m", "m")
} else {
scale <- 1000
scale_labels <- c("", "km", "km")}
if ((terra::xmax(prediction) - terra::xmin(prediction)) < 5000){
scale <- 1
scale_labels <- c("", "m", "m")
} else {
scale <- 1000
scale_labels <- c("", "km", "km")}
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scale = scale,
xy = scale_position,
type = "bar",
divs = 4,
labels = scale_labels)
f <- system.file("ex/meuse.tif", package="terra")
r <- terra::rast(f)
terra::plot(r)
terra::sbar()
terra::sbar(1000, xy=c(178500, 333500), type="bar", divs=4, cex=.8)
terra::sbar(1000, xy="bottomright", divs=3, cex=.8, ticks=TRUE)
terra::north(d=250, c(178550, 332500))
library(terra)
plot(r, type="interval")
sbar(20, c(6.2, 50.1), type="bar", cex=.8, divs=4)
sbar(15, c(6.3, 50), type="bar", below="km", label=c(0,7.5,15), cex=.8)
sbar(15, c(6.65, 49.8), cex=.8, label=c(0,"km",15))
north(type=2)
sbar(15, c(6.65, 49.7), cex=.8, label="15 kilometer", lwd=5)
sbar(15, c(6.65, 49.6), divs=4, cex=.8, below="km")
plot(r, type="interval")
sbar(20, c(6.2, 50.1), type="bar", cex=.8, divs=4)
sbar(15, c(6.3, 50), type="bar", below="km", label=c(0,7.5,15), cex=.8)
sbar(15, c(6.65, 49.8), cex=.8, label=c(0,"km",15))
north(type=2)
sbar(15, c(6.65, 49.7), cex=.8, label="15 kilometer", lwd=5)
sbar(15, c(6.65, 49.6), divs=4, cex=.8, below="km")
f <- system.file("ex/meuse.tif", package="terra")
r <- terra::rast(f)
terra::plot(r)
terra::sbar()
terra::sbar(1000, xy=c(178500, 333500), type="bar", divs=4, cex=.8)
terra::sbar(1000, xy="bottomright", divs=3, cex=.8, ticks=TRUE)
terra::north(d=250, c(178550, 332500))
remove(f, r)
plot(r, type="interval")
sbar(20, c(6.2, 50.1), type="bar", cex=.8, divs=4)
sbar(15, c(6.3, 50), type="bar", below="km", label=c(0,7.5,15), cex=.8)
sbar(15, c(6.65, 49.8), cex=.8, label=c(0,"km",15))
north(type=2)
sbar(15, c(6.65, 49.7), cex=.8, label="15 kilometer", lwd=5)
sbar(15, c(6.65, 49.6), divs=4, cex=.8, below="km")
png(filename = file.path(envrmt$path_maps, paste0("map_", filename, ".png")))
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
scale_label <- "kilometers"
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
if ((terra::xmax(prediction) - terra::xmin(prediction)) < 1000){
scale <- 1
scale_label <- "meters"
} else {
scale <- 1000
scale_label <- "kilometers"}
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
if ((terra::xmax(prediction) - terra::xmin(prediction)) < 1000){
scale <- 1
scale_label <- "meters"
} else {
scale <- 1000
scale_label <- "kilometers"}
(terra::xmax(prediction) - terra::xmin(prediction)
)
if ((terra::xmax(prediction) - terra::xmin(prediction)) < 10000){
scale <- 1
scale_label <- "meters"
} else {
scale <- 1000
scale_label <- "kilometers"}
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
climplot(
mnote = "vignette",
sensor = "Ta_200",
aoa = FALSE,
plot_maps = TRUE,
mapcolors = rev(heat.colors(50),
scale_position = "bottomleft",
north_position = "topright"
)
north_position = "topright"
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(xy = north_position)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 2)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 3)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 4)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 5)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 6)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 7)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 8)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 9)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 10)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 11)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey")
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 12)
terra::plot(
prediction,
col = mapcolors,
background = "lightgrey",
box = TRUE)
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 2)
terra::plot(
main = filename,
prediction,
col = mapcolors,
background = "lightgrey",
box = TRUE)
filename <- gsub("_prediction.tif.*", "", preds[i])
terra::plot(
main = filename,
prediction,
col = mapcolors,
background = "lightgrey",
box = TRUE)
terra::sbar(
scaleby = scale,
xy = scale_position,
type = "bar",
divs = 4,
below = scale_label)
north(
xy = north_position,
type = 2)
rcmdcheck()
devtools::load_all()
devtools::check()
.Last.error
climplot(
mnote = "vignette",
sensor = "Ta_200",
aoa = FALSE,
mapcolors = rev(heat.colors(50),
scale_position = "bottomleft",
north_position = "topright"
)
climplot(
mnote = "vignette",
sensor = "Ta_200",
aoa = FALSE,
mapcolors = rev(heat.colors(50)),
scale_position = "bottomleft",
north_position = "topright"
)
devtools::load_all()
use_mit_license()
install.packages("license")
usethis::use_gpl3_license()
usethis::use_testthat()
usethis::use_test()
roxygen2::roxygenise()
tools::showNonASCIIfile("R/TubeDB.R")
?envi.create
?prep.csv
?envi.create
?terra::terraOptions
#install climodr
devtools::install_github(
"https://github.com/envima/climodr.git",
auth_token = "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"
)
#install climodr
devtools::install_github(
"https://github.com/envima/climodr.git",
auth_token = "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"
)
#devtools::load_all() # Solange Github-Repo noch privat
#install climodr
#devtools::install_github(
#  "https://github.com/envima/climodr.git",
#  auth_token = "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"
#  )
devtools::load_all() # Solange Github-Repo noch privat
install.packages(c("cachem", "cli", "digest", "downlit", "fastmap", "pkgdown", "pkgload", "rlang", "roxygen2", "survival", "xts", "yaml"))
install.packages(c("cli", "digest", "fastmap", "rlang"))
library(cli)
detach("package:cli", unload = TRUE)
library(fastmap)
detach("package:fastmap", unload = TRUE)
remove.packages("fastmap")
install.packages("fastmap")
remove.packages("cli")
install.packages("cli")
unlink("vignettes/climodr_vignette_cache", recursive = TRUE)
install.packages("devtools")
devtools::load_all()
#install climodr
devtools::install_github(
"https://github.com/envima/climodr.git",
auth_token = "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"
)
# devtools::load_all() # Solange Github-Repo noch privat
library(climodr)
#install climodr
devtools::install_github(
"https://github.com/envima/climodr.git",
auth_token = "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"
)
# devtools::load_all() # Solange Github-Repo noch privat
tinytex::install_tinytex()
"fertig"
