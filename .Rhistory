.libPaths
.libPaths()
install.packages(devtools)
install.packages("devtools")
devtools::use_package(c("mapview","raster","dplyr","tidyverse","RStoolbox","doParallel","corrplot","geodata",
"randomForest","caret","readr","ggplot2","CAST","rgdal","sf","lubridate",
"sp","stars","horizon","terra","ggplot2","rasterVis","grid","viridis","ggthemes",
"ggspatial","reshape2","plotly","cowplot","gridExtra","lattice","ggpubr","ggnewscale","corrplot"))
devtools::use_package("mapview")
library(devtools)
devtools::use_package(c("mapview","raster","dplyr","tidyverse","RStoolbox","doParallel","corrplot","geodata",
"randomForest","caret","readr","ggplot2","CAST","rgdal","sf","lubridate",
"sp","stars","horizon","terra","ggplot2","rasterVis","grid","viridis","ggthemes",
"ggspatial","reshape2","plotly","cowplot","gridExtra","lattice","ggpubr","ggnewscale","corrplot"))
usethis::use_package(c("mapview","raster","dplyr","tidyverse","RStoolbox","doParallel","corrplot","geodata",
"randomForest","caret","readr","ggplot2","CAST","rgdal","sf","lubridate",
"sp","stars","horizon","terra","ggplot2","rasterVis","grid","viridis","ggthemes",
"ggspatial","reshape2","plotly","cowplot","gridExtra","lattice","ggpubr","ggnewscale","corrplot"))
usethis::use_package("mapview","raster","dplyr","tidyverse","RStoolbox","doParallel","corrplot","geodata",
"randomForest","caret","readr","ggplot2","CAST","rgdal","sf","lubridate",
"sp","stars","horizon","terra","ggplot2","rasterVis","grid","viridis","ggthemes",
"ggspatial","reshape2","plotly","cowplot","gridExtra","lattice","ggpubr","ggnewscale","corrplot")
usethis::use_package("mapview")
usethis::use_dev_package("envimaR", type = "Imports", remote = "gitlab::envima/envimaR")
usethis::use_dev_package("envimaR", type = "Imports", remote = "github::envima/envimaR")
usethis::use_package("envimaR", type = "Imports", remote = "github::envima/envimaR")
usethis::use_dev_package("envimaR", type = "Imports", remote = "envima/envimaR")
usethis::use_dev_package("envimaR", type = "Imports", remotes = "envima/envimaR")
usethis::use_dev_package("envimaR", type = "Imports", remote = "https://github.com/envima/envimaR")
?person
usethis::use_dev_package("envimaR", type = "Imports", remote = "https://github.com/envima/envimaR")
devtools::install_github("envima/envimaR")
usethis::use_dev_package("envimaR", type = "Imports", remote = "github::envima/envimaR@HEAD")
setwd("D:/Kluga/GitHub/climodr")
usethis::use_dev_package("envimaR", type = "Imports", remote = "github::envima/envimaR@HEAD")
# Now create/read root direcory, folder structure and load packages
# NOTE rootDIR MUST be defined in calling script
if (!exists("rootDIR")) {
cat("variable rootDIR is NOT defined\n 'D:/edu//bale_aws/bekar' is set by default")
rootDIR = "D:/edu//bale_aws/bekar"
}
tempdir()
devtools::load_all(".")
?hubs
hubs("C:/Users/Alexander/Documents/Universität/HiWi/Test/data/Input", "C:/Users/Alexander/Documents/Universität/HiWi/Test/data/Output")
Input
envi.create("C:/Users/Alexander/Documents/Universität/HiWi/Test")
warnings()
envi.create("C:/Users/Alexander/Documents/Universität/HiWi/Test")
devtools::load_all(".")
envi.create("C:/Users/Alexander/Documents/Universität/HiWi/Test")
devtools::load_all(".")
envi.create("C:/Users/Alexander/Documents/Universität/HiWi/Test")
print("done")
devtools::load_all(".")
envi.create("C:/Users/Alexander/Documents/Universität/HiWi/Test")
devtools::load_all(".")
envi.create("C:/Users/Alexander/Documents/Universität/HiWi/Test")
devtools::load_all(".")
install.packages("dplyr")
install.packages("horizon")
devtools::load_all(".")
envi.create("C:/Users/Alexander/Documents/Universität/HiWi/Test")
load.all()
library(devtools)
load.all()
devtools::load.all()
devtools::load_all()
hubs("C:/Users/Alexander/Documents/Universität/HiWi/Test/data/Input",
"C:/Users/Alexander/Documents/Universität/HiWi/Test/data/Output")
devtools::load_all()
hubs("C:/Users/Alexander/Documents/Universität/HiWi/Test/data/Input",
"C:/Users/Alexander/Documents/Universität/HiWi/Test/data/Output")
devtools::load_all()
hub("C:/Users/Alexander/Documents/Universität/HiWi/Test/data/Input",
"C:/Users/Alexander/Documents/Universität/HiWi/Test/data/Output")
hubs("C:/Users/Alexander/Documents/Universität/HiWi/Test/data/Input",
"C:/Users/Alexander/Documents/Universität/HiWi/Test/data/Output")
envi.create("C:/Users/Alexander/Documents/Universität/HiWi/Test/data")
?hubs
tempdir()
?terra
?else
?if
